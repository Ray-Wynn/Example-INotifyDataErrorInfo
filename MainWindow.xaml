<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        x:Class="Example_INotifyDataErrorInfo.MainWindow"
        xmlns:local="clr-namespace:Example_INotifyDataErrorInfo"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance local:DataProducts}"
        Title="Example INotifyDataErrorInfo" SizeToContent="WidthAndHeight">

    <!-- Code derived from https://kmatyaszek.github.io/wpf%20validation/2019/03/13/wpf-validation-using-inotifydataerrorinfo.html -->
    <Window.Resources>
        <!-- Textbox Validation Style
                Tooltip single validation error reporting -->
        <Style x:Key="Example-TextBoxValidationError" TargetType="{x:Type TextBox}">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <!-- DataGrid.RowValidationErrorTemplate
                Display yellow exclamation mark within a red circle on row containing validation errors. -->
        <ControlTemplate x:Key="Example-RowValidationErrorTemplate">
            <Grid Margin="0,-2,0,-2">
                <Ellipse StrokeThickness="0" Fill="Red" Width="{TemplateBinding FontSize}" Height="{TemplateBinding FontSize}" />
                <TextBlock Text="!" FontSize="{TemplateBinding FontSize}" FontWeight="Bold" Foreground="Yellow" HorizontalAlignment="Center" VerticalAlignment="Center" />
            </Grid>
        </ControlTemplate>

        <!-- DataGrid.RowDetailsTemplate
                Display one or more row validation errors in RowDetails when row is selected. -->
        <DataTemplate x:Key="Example-RowDetailsTemplate">
            <StackPanel>
                <ItemsControl ItemsSource="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}}, Path=(Validation.Errors)}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding ErrorContent}" Foreground="Red" Padding="4,0,4,2"/>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </StackPanel>
        </DataTemplate>
    </Window.Resources>
    
    <Grid MinWidth="200" Margin="4">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="auto"/>
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>

        <TextBlock Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="0" Text="Example INotifyDataErrorInfo" FontWeight="Bold" HorizontalAlignment="Center"/>
        <!-- Products -->
        <TextBlock Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="1" Text="Products" FontWeight="Bold" HorizontalAlignment="Center"/>

        <DataGrid Name="DataGridProducts" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="2" AutoGenerateColumns="False" CanUserAddRows="True" ItemsSource="{Binding}" 
                  RowValidationErrorTemplate="{StaticResource Example-RowValidationErrorTemplate}"
                  RowDetailsTemplate="{StaticResource Example-RowDetailsTemplate}">
            <DataGrid.Columns>
                <!-- Product -->
                <DataGridTemplateColumn  Header="Product" MinWidth="100" Width="auto">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBox Text="{Binding Path=Product, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <!-- Stock -->
                <DataGridTemplateColumn  Header="Stock" MinWidth="100" Width="auto">
                    <DataGridTemplateColumn.CellTemplate >
                        <DataTemplate>
                            <TextBox Text="{Binding Path=Stock, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
        
        <!-- TextBox implementations -->
        <TextBlock Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="3" Text="Product Selection" FontWeight="Bold" HorizontalAlignment="Center"/>
        <!-- Product -->
        <TextBlock Grid.Column="0" Grid.Row="4" Text="Product" FontWeight="Bold" HorizontalAlignment="Right" Margin="0,0,4,0"/>
        <TextBox Grid.Column="1" Grid.Row="4" Style="{StaticResource Example-TextBoxValidationError}"
                 Text="{Binding SelectedItem.Product, ElementName=DataGridProducts, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True}"/>
        <!-- Stock -->
        <TextBlock Grid.Column="0" Grid.Row="5" Text="Stock" FontWeight="Bold" HorizontalAlignment="Right" Margin="0,0,4,0"/>
        <TextBox Grid.Column="1" Grid.Row="5" Style="{StaticResource Example-TextBoxValidationError}"
                 Text="{Binding SelectedItem.Stock, ElementName=DataGridProducts, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True}"/>

        <!-- Provide a raw DataGrid view of the data -->
        <TextBlock Grid.Column="2" Grid.Row="1" Text="Data Raw View" FontWeight="Bold" HorizontalAlignment="Center"/>
        <DataGrid x:Name="RawViewDataGrid" Grid.Column="2" Grid.Row="2" Grid.RowSpan="4" ItemsSource="{Binding}"/>
    </Grid>
</Window>
